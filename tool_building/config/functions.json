{
    "break_down_goal": "from swarm.swarm import Swarm\nfrom task import Task\nasync def break_down_goal(goal):\n\tswarm = Swarm()\n\tbroken_down_goal = await swarm.agents['head_agent'].chat(goal)\n\tnext_task = Task('route_subtasks', broken_down_goal['arguments'])\n\tswarm.task_queue.put_nowait(next_task)",
    "route_subtasks": "from swarm.swarm import Swarm\nfrom task import Task\nasync def route_subtasks(subtasks, context, is_parallel):\n    swarm = Swarm()\n    task_list = ['break_down_goal', 'write_text', 'write_python', 'retrieve_info', 'ask_user_for_help']\n    \n    def route_to_task_from_action_index(action_index, subtask):\n        goal = f'Context: {context}\\n\\n\\nGoal: {subtask}'\n        data = {'goal': goal}\n        next_task = Task(task_list[action_index], data)\n        swarm.task_queue.put_nowait(next_task)\n        \n    def messagify(subtask):\n        return f\"Context to understand the task: {context}\\n\\n\\n The task. Decide what we should do next to accomplish this: {subtask}\"\n    \n    if not is_parallel:\n        action_index = await swarm.agents['subtask_router_agent'].chat(messagify(subtasks[0]))\n        action_index = action_index['arguments']['next_action']\n        route_to_task_from_action_index(action_index-1, subtasks[0])\n    else:\n        for subtask in subtasks:\n            action_index = await swarm.agents['subtask_router_agent'].chat(messagify(subtask))\n            action_index = action_index['arguments']['next_action']\n            route_to_task_from_action_index(action_index-1, subtask)"
}