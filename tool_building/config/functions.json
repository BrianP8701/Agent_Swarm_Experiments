{
    "break_down_goal": "from swarm.swarm import Swarm\nfrom task import Task\nasync def break_down_goal(goal):\n    swarm = Swarm()\n    broken_down_goal = await swarm.agents['head_agent'].chat(goal)\n    next_task = Task('route_task', broken_down_goal['arguments'])\n    swarm.task_queue.put_nowait(next_task)\n    save_message = {\n        'Goal was broken down into: ': broken_down_goal['arguments']['subtasks'],\n        'Context to understand the goal: ': broken_down_goal['arguments']['context'],\n        'Is parralel?': broken_down_goal['arguments']['is_parallel']\n    }\n    swarm.save(swarm.save_path, save_message)",
    "write_python": "from swarm.swarm import Swarm\nfrom swarm.agent import Agent\nfrom task import Task\nasync def write_python(goal):\n    print(f'\\n\\n{goal}\\n\\n')\n    swarm = Swarm()\n    python_agent: Agent = swarm.agents['write_python_agent']\n    \n    tool_output = await python_agent.chat(goal)\n    print('bitch ass md here')\n    print(f'\\n\\n{tool_output}\\n\\n')\n    python_code = tool_output['arguments']['python_code']\n    \n    next_task = Task('save_python_code', tool_output['arguments'])\n    swarm.task_queue.put_nowait(next_task)\n    save_message = f'The code we wrote to solve: {goal} \\n\\n{python_code}'\n    swarm.save(swarm.save_path, save_message)",
    "route_task": "from swarm.swarm import Swarm\nfrom task import Task\nasync def route_task(subtasks, context, is_parallel):\n    swarm = Swarm()\n    task_list = ['break_down_goal', 'write_text', 'write_python', 'retrieve_info', 'ask_user_for_help']\n    \n    def route_to_task_from_action_index(action_index, subtask):\n        goal = {'goal': f'Context to understand the task: {context}\\n\\n\\n The task: {subtask}'}\n        next_task = Task(task_list[action_index], goal)\n        swarm.task_queue.put_nowait(next_task)\n        save_message = f'We will call {task_list[action_index]} to accomplish: {subtask}'\n        swarm.save(swarm.save_path, save_message)\n        \n    def messagify(subtask):\n        return f\"Context to understand the task: {context}\\n\\n\\n The task. Decide what we should do next to accomplish this: {subtask}\"\n    \n    if not is_parallel:\n        action_index = await swarm.agents['subtask_router_agent'].chat(messagify(subtasks[0]))\n        action_index = action_index['arguments']['next_action']\n        route_to_task_from_action_index(action_index-1, subtasks[0])\n    else:\n        for subtask in subtasks:\n            action_index = await swarm.agents['router_agent'].chat(messagify(subtask))\n            action_index = action_index['arguments']['next_action']\n            route_to_task_from_action_index(action_index-1, subtask)"
}